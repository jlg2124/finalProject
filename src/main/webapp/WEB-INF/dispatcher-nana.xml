<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- ajax사용하려면 ResponseBody를 컨트롤러에서 사용해야되는데, 이거할려면 mvc:annotation-driven 선언해줘야함 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 1. DataSource 빈 선언 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>
	
	<!-- 2. SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:config/discMapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 3. SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- [4] TransactionManager 빈 선언 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource" />
   	</bean>
   
   
   	<!-- [5] 선언적 트랜잭션(tx:advice) 선언 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
   
   
   	<!-- [6] 트랜잭션으로 처리할 메소드에 transactionManger설정 -->
   	<aop:config>
      	<aop:pointcut expression="execution(* service.DiscServiceImp.*process(..))" id="aa"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aa"/>
	</aop:config>
	
	
	<!-- dao -->
	<bean id = "discDao" class = "dao.DiscDaoImp">
   		<property name="sqlSession" ref="sqlSession"/>
   	</bean>
	
	
	<!-- service -->
	<bean id = "discService" class = "service.DiscServiceImp">
   		<property name="dao" ref = "discDao"/>
   	</bean>
	

	<!-- controller -->
	<bean class = "controller.MainController" >
		<property name="discService" ref="discService"/>
	</bean>

	<!-- tiles -->
	<bean class = "org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<!-- tiles 환경설정해둔것 등록해줌 -->
		<property name = "definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>


	<!-- viewResolver -->
	<bean class = "org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<property name="order" value = "1"/>
	</bean>
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value = "2"/>
	</bean>

</beans>
